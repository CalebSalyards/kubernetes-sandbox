apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      environment: test
  minReadySeconds: 10
  strategy:
    type: RollingUpdate # Recreate does all pods simultaneously...not production-friendly
    rollingUpdate:
      # These values can be percentages instead of number of nodes
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nginx
        environment: test
    spec:
      # nodeName: <nodeName> # Mandates that the pod(s) are scheduled on the specified node
      # nodeSelector: # Mandates that the pod(s) are scheduled only on nodes falling under the selector
      #   node-type: superfast # kubectl label nodes <node-name> <key>:<value>
      # affinity:
      #   nodeAffinity:
      #     # Anti-affinity rule
      #     requiredDuringSchedulingIgnoredDuringExecution: # Hard rule
      #       nodeSelectorTerms:
      #         matchExpressions:
      #           - key: node-type
      #             operator: NotIn
      #             values:
      #               - extremelyslow
      #     # Affinity rule
      #     preferredDuringSchedulingIgnoredDuringExecution: # Soft rule
      #       - weight: 1 # Weight of soft rule
      #         preference:
      #           matchExpressions:
      #             - key: node-type
      #               operator: In
      #               values:
      #                 - fast
      #                 - superfast
      containers:
        - name: nginx
          image: nginx:1.18
          ports:
            - containerPort: 80
          command:
            - /bin/sh
            - -c
            - |
              touch /usr/share/nginx/html/ready
              echo "You have been served by Pod with IP $(hostname -i)" > /usr/share/nginx/html/index.html
              nginx -g "daemon off;"
          readinessProbe:
            httpGet:
              path: /ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 2 
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 2

# Use the --record flag when applying for tracking changes made to objects
# Use "$ kubectl rollout status deployment <deployment>" to track the deployment status is real time

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-deployment-service
spec:
  selector:
    app: nginx
    environment: test
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80